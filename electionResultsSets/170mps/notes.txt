The number of votes for the winning candidate 
	minus
The number of votes for the highest PR supporting candidate
	

# The number of votes for the winning candidate 
select c.DISTRICT_ID, VOTES votes_won
from contest c 
inner join districts d on d.DISTRTICT_ID = c.DISTRICT_ID  
where WON = 1 
 and d.PARLIAMENT_ID = 14;

minus

# The number of votes for the highest PR supporting candidate
select c.DISTRICT_ID, max(VOTES) votes_pr
from contest c 
inner join districts d on d.DISTRICT_ID = c.DISTRICT_ID  
where d.PARLIAMENT_ID = 14
and 
 (CANDIDATE_PARTY in (13, 8)
   or
  CANDIDATE_NAME in (
'Brent Rathgeber',
  'Carolyn Bennett',
 'Scott Brison',
 'Rodger Cuzner',
 'Stéphane Dion',
 'Kirsty Duncan',
 'Wayne Easter',
 'Mark Eyking',
 'Hedy Fry',
 'Ted Hsu',
 'Bruce Hyer',
 'Jean-François Larose',
 'John McCallum',
 'David McGuinty',
 'John McKay',
 'Maria Mourani',
 'Joyce Murray',
 'Claude Patry',
 'Manon Perreault',
 'Louis Plamondon',
 'Frank Valeriote',
 'Adam Vaughan'
 ))
group by DISTRICT_ID;



### The number of votes for the winning candidate 
minus
### The number of votes for the highest PR supporting candidate

select pr.DISTRICT_ID, 
d.DISTRICT_UNIQUE_NAME, 
won.CANDIDATE_NAME Winner,
max(pr.VOTES) votes_pr, 
won.votes votes_won,
 won.votes - max(pr.VOTES) votes_to_convince
from contest pr
inner join districts d on d.DISTRICT_ID = pr.DISTRICT_ID  
inner join contest won on won.district_ID = pr.DISTRICT_ID
where d.PARLIAMENT_ID = 14
and won.won=1
and 
 (pr.CANDIDATE_PARTY in (13, 8)
   or
  pr.CANDIDATE_NAME in (
'Brent Rathgeber',
  'Carolyn Bennett',
 'Scott Brison',
 'Rodger Cuzner',
 'Stéphane Dion',
 'Kirsty Duncan',
 'Wayne Easter',
 'Mark Eyking',
 'Hedy Fry',
 'Ted Hsu',
 'Bruce Hyer',
 'Jean-François Larose',
 'John McCallum',
 'David McGuinty',
 'John McKay',
 'Maria Mourani',
 'Joyce Murray',
 'Claude Patry',
 'Manon Perreault',
 'Louis Plamondon',
#'Frank Valeriote',
 'Adam Vaughan',
 'Mauril Bélanger'
 ))
group by pr.DISTRICT_ID
order by votes_to_convince
INTO outfile '/tmp/170mps.csv'
;



### Modify the contest table with a pro pr column


alter table contest add column pr2015 boolean;

update contest pr set pr2015 = true where 
 (pr.CANDIDATE_PARTY in (13, 8) 
   or
  pr.CANDIDATE_NAME in (
'Brent Rathgeber',
  'Carolyn Bennett',
 'Scott Brison',
 'Rodger Cuzner',
 'Stéphane Dion',
 'Kirsty Duncan',
 'Wayne Easter',
 'Mark Eyking',
 'Hedy Fry',
 'Ted Hsu',
 'Bruce Hyer',
 'Jean-François Larose',
 'John McCallum',
 'David McGuinty',
 'John McKay', 
 'Maria Mourani',
 'Joyce Murray',
 'Claude Patry', 
 'Manon Perreault',
 'Louis Plamondon',
#'Frank Valeriote',
 'Adam Vaughan',
 'Mauril Bélanger'
 ));

### Set the other contests of election #14 to false
update contest c, districts d
set c.pr2015 = false
where c.DISTRICT_ID = d.DISTRICT_ID 
and d.PARLIAMENT_ID = 14
and c.pr2015 is null;

### Check the results 
select c.CANDIDATE_NAME, d.DISTRICT_UNIQUE_NAME, c.pr2015
from contest c, districts d
where c.DISTRICT_ID = d.DISTRICT_ID
and d.PARLIAMENT_ID = 14
and d.DISTRICT_UNIQUE_NAME like '%Ottawa%';




### Highest non-PR - highest PR

select p.PROVINCE_SYMBOL,
d.DISTRICT_ENGLISH_NAME,
won.CANDIDATE_NAME Winner,
max(pr.VOTES) pr_votes, 
max(nonpr.VOTES) non_pr_votes,
max(nonpr.VOTES)-max(pr.VOTES) votes_to_convince
from contest pr
inner join contest won on won.district_ID = pr.district_ID
inner join districts d on d.DISTRICT_ID = pr.DISTRICT_ID  
inner join contest nonpr on pr.district_ID = nonpr.DISTRICT_ID
inner join province p on d.PROVINCE_ID = p.PROVINCE_ID
where d.PARLIAMENT_ID = 14
and pr.pr2015 = TRUE
and nonpr.pr2015 = FALSE
and won.WON = 1
group by pr.DISTRICT_ID
order by votes_to_convince
INTO outfile '/tmp/170mps.csv'
;



### Number of pro-PR votes for parliement 14 who have won

### Number of non-PR votes for parliament 14 who have won

select c.pr2015, sum(VOTES)
from contest c, districts d
where c.DISTRICT_ID = d.DISTRICT_ID
and d.PARLIAMENT_ID = 14
#and c.WON = 1
group by pr2015
;


select sum(VOTES)
from contest c, districts d
where c.DISTRICT_ID = d.DISTRICT_ID
and d.PARLIAMENT_ID = 14
;

